자바에서 함수를 만들어서 사용하는법

클래스의 구성요소
필드
함수
생성자

자바스크립트에서의 함수
- 일련의 처리를 하나로 모아 언제든 호출할 수 있도록 만들어 놓은 것
- 수학의 함수와 비슷
- 함수의 입력값을 인수, 함수의 출력값을 반환값

function 함수명(매개변수){
    처리 로직
    return 반환값

}

함수는 독립적으로 호출이 가능하다.
매개변수를 여러개 정의 할 수 도 있다.
function method(a,b){
    let c = a + b;
    return c;
}

1. 매개변수가 있고 반환값이 있는 함수
2. 매개변수가 있고 반환값이 없는 함수
3. 매개변수가 없고 반환값이 있는 함수
4. 매개변수가 없고 반환값도 없는 함수

함수의 흐름
- 호출된 코드에 있는 인자가 함수의 매개변수에 대입된다.
- 함수의 코드블럭 안에 있는 코드들이 순차적으로 실행된다.
- return 문이 실행되면 반환값을 가지고 함수를 호출한곳으로 돌아간다.

함수의 호이스팅
- 자바 스크립트 엔진은 변수 선언문과 마찬가지로 함수 선언문을 프로그램의 첫 머리로 끌어 올린다,
- 따라서 함수 선언문은 어떤 프로그램 위치에서도 작성할 수 있다.

js를 html과 어떻게 사용할것인가?

html 파일 안에 <script> ~ </script>

이벤트 핸들러 맛보기
정적인 마크업 언어에서 동적인 일이 일어나는 것은 하나의 사건이라고 할 수 있다.
버튼을 클릭하는 것도 사건
빈칸에 글자를 타이핑하는 것도 사건
이러한 사건을 js에서는 이벤트라고 부른다.
onClick -> 클릭했을 때를 의미하는 속성 이때 수행되는 작업을 이벤트 핸들러라고 함
<hr>


이벤트 처리를 위한 함수표현
태그에 onclick속성을 부여하여 이벤트를 처리하는 방법을 인라인 이벤트 모델이라고 부름

표준 이벤트 모델
인라인 이벤트 모델은 HTML에 기능적인 측면이 추가됨에 따라 '정보의 뼈대' 만 제공한다는 
HTML의 철학이 무너진다 따라서 협업을 하는 다른 개발자가 기능의 수정을 위해 굳이 정보 위주의
문서이 HTML 파일을 열어봐야 한다는 문제가 있다.

자바스크립트 활용시 주의사항
자바스크립트 코드를 별도의 파일로 분리하기
html도 위에서 아래로 실행되기 때문에 아직 만들어지지 않은 html 요소에 대해서 읽어올 수 없다.

js에게 html 코드가 모두 실행되면 그 때 너의 코드를 실행해줘
이와 같은 방식을 비동기처리라고 부른다.

동기처리는 하나의 작업이 끝나는 즉시 다음 명령을 처리한다.
덕분에 아직 html 요소가 만들어지지 않은 상태에서 요소의 기능을 추가하라는 상황이 벌어진다.

반면 비동기 처리는 지금 당장 처리해야 할 명령과 나중에 처리할 명령을 구분한다.

태그를 못찾는 경우 해결법
1. <script> 를 태그 아래로 내린다.
2. 인라인 이벤트 모델만 사용
3. DOMContentLoaded 이벤트를 활용한다.